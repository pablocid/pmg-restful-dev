{"version":3,"sources":["api/schm/schm.controller.js"],"names":["stream","aggregate","index","fullSchm","show","create","update","destroy","Stream","require","respondWithResult","res","statusCode","entity","status","json","ArrayFormatter","call","writable","_done","prototype","write","doc","_hasWritten","emit","end","req","query","checkParam","type","name","filter","JSON","parse","i","length","p","attributes","key","datatype","value","push","find","cursor","pipe","AggregateParser","AggParser","aP","exec","then","catch","handleError","saveUpdates","updates","updated","extend","save","removeEntity","remove","handleEntityNotFound","err","send","param","dataType","response","test","arr","isValid","console","log","items","parseInt","page","Error","all","count","skip","limit","spread","data","pages","Math","ceil","totalLength","fail","findValueByVarHelper","array","target","self","Array","isArray","map","x","indexOf","undefined","schmId","firstCall","s","id","reference","f","findById","schmAttrInputConf","schm","_id","AttrList","list","schema","secondCall","d","attrInputConf","thirdCall","forthCall","inputRefs","queryInputs","inputs","concatCall","concat","fcall","record_only","params","body"],"mappings":"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","file":"schm.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/schms              ->  index\n * POST    /api/schms              ->  create\n * GET     /api/schms/:id          ->  show\n * PUT     /api/schms/:id          ->  update\n * DELETE  /api/schms/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Schm from './schm.model';\nimport q from 'q';\nvar Stream = require('stream').Stream;\n\nfunction respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function(entity) {\n        if (entity) {\n            res.status(statusCode).json(entity);\n        }\n    };\n}\n\n\nfunction ArrayFormatter() {\n    Stream.call(this);\n    this.writable = true;\n    this._done = false;\n}\n\nArrayFormatter.prototype = Stream.prototype;\n\nArrayFormatter.prototype.write = function(doc) {\n    if (!this._hasWritten) {\n        this._hasWritten = true;\n\n        // open an object literal / array string along with the doc\n        this.emit('data', '[' + JSON.stringify(doc));\n\n    } else {\n        this.emit('data', ',' + JSON.stringify(doc));\n    }\n\n    return true;\n}\n\nArrayFormatter.prototype.end =\n    ArrayFormatter.prototype.destroy = function() {\n        if (this._done) return;\n        this._done = true;\n\n        // close the object literal / array\n        this.emit('data', ']');\n        // done\n        this.emit('end');\n    }\n\nexport function stream(req, res) {\n    var query = {};\n\n    if (checkParam(req.query.type, 'string')) {\n        query.type = req.query.type;\n        //console.log('schm')\n    }\n\n    if (checkParam(req.query.name, 'string')) {\n        query.name = req.query.name;\n        //console.log('schm')\n    }\n\n    if (checkParam(req.query.filter, 'filter')) {\n        query[\"$and\"] = [];\n\n        var filter = JSON.parse(req.query.filter);\n        for (var i = 0; i < filter.length; i++) {\n            var p = { attributes: {} };\n            p[\"attributes\"][\"$elemMatch\"] = {};\n            p[\"attributes\"][\"$elemMatch\"]['id'] = filter[i].key;\n            p[\"attributes\"][\"$elemMatch\"][filter[i].datatype] = filter[i].value;\n            query[\"$and\"].push(p);\n        }\n    }\n\n    Schm.find(query).cursor().pipe(new ArrayFormatter()).pipe(res);\n\n}\nvar AggregateParser = require(\"../record/services/aggregation.oidParser\").AggParser;\n\nexport function aggregate(req, res) {\n    var query;\n\n\n    var aP = new AggregateParser(req.query.query);\n    query = aP.parse();\n\n    return Schm.aggregate(query).exec()\n        .then(respondWithResult(res, 200))\n        .catch(handleError(res));\n}\n\nfunction saveUpdates(updates) {\n    return function(entity) {\n        var updated = _.extend(entity, updates);\n        return updated.save()\n            .then(updated => {\n                return updated;\n            });\n    };\n}\n\nfunction removeEntity(res) {\n    return function(entity) {\n        if (entity) {\n            return entity.remove()\n                .then(() => {\n                    res.status(204).end();\n                });\n        }\n    };\n}\n\nfunction handleEntityNotFound(res) {\n    return function(entity) {\n        if (!entity) {\n            res.status(404).end();\n            return null;\n        }\n        return entity;\n    };\n}\n\nfunction handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function(err) {\n        res.status(statusCode).send(err);\n    };\n}\n\nfunction checkParam(param, dataType) {\n\n    if (param === null) { return false; }\n    var response = false;\n\n    if (dataType === 'string') {\n        if (typeof param === 'string' && param.length > 0) {\n            response = true;\n        }\n    }\n\n    if (dataType === 'number') {\n        //console.log('chequea numero')\n        if (typeof param === 'number') {\n            response = true;\n        }\n        if (typeof param === 'string') {\n\n            if (/^\\d*$/.test(param)) {\n                //console.log('es  numero')\n                response = true;\n            }\n        }\n    }\n\n    if (dataType === 'objectId') {\n        if (/^[0-9a-f]{24}$/i.test(param)) {\n            response = true;\n        }\n    }\n\n    //filtro de registros\n    if (dataType === 'filter') {\n        //checkeando si hay errores en el parseo a JSON\n        try {\n            var arr = JSON.parse(param);\n            //check if is an Array and if is empty\n            if (arr.length) {\n                // verificando si los obj dentro del array tiene las propiedades key, datatype y value\n                var isValid = true;\n                for (var index = 0; index < arr.length; index++) {\n                    if (arr[index].key === null || arr[index].value === null || arr[index].datatype === null) {\n                        isValid = false;\n                    }\n                }\n                response = isValid;\n            }\n\n        } catch (err) {\n            response = false;\n            console.log('invalid JSON')\n        }\n    }\n\n    return response;\n}\n\n// Gets a list of Schms\nexport function index(req, res) {\n    console.log(req.query.items);\n    var items = 30;\n    if (checkParam(req.query.items, 'number')) {\n        items = parseInt(req.query.items);\n    }\n\n    var page = req.query.page || 1;\n    // checking the query data types\n    if (!checkParam(page, 'number') || page === \"0\") {\n        return respondWithResult(res, 500)({ Error: 'El parámetro page no es válido' });\n    }\n    if (!checkParam(items, 'number')) {\n        //return respondWithResult(res, 500)({Error:'El parámetro items no es válido'});\n    }\n\n    var query = {};\n    //filtrar por schm\n    if (checkParam(req.query.type, 'string')) {\n        query.type = req.query.type;\n        //console.log('schm')\n    }\n\n    if (checkParam(req.query.filter, 'filter')) {\n        query[\"$and\"] = [];\n\n        var filter = JSON.parse(req.query.filter);\n        for (var i = 0; i < filter.length; i++) {\n            var p = { attributes: {} };\n            p[\"attributes\"][\"$elemMatch\"] = {};\n            p[\"attributes\"][\"$elemMatch\"]['id'] = filter[i].key;\n            p[\"attributes\"][\"$elemMatch\"][filter[i].datatype] = filter[i].value;\n            query[\"$and\"].push(p);\n        }\n        //console.log(filter);\n    }\n    console.log(JSON.stringify(query))\n\n    q.all([\n        Schm.find(query).count().exec(),\n        Schm.find(query).skip(items * (page - 1)).limit(items)\n    ]).spread((count, data) => {\n        respondWithResult(res)({\n            page: parseInt(page),\n            pages: Math.ceil(count / items),\n            length: data.length,\n            totalLength: count,\n            items: data\n        });\n    }).fail(handleError(res));\n    /*\n    return Schm.find().exec()\n      .then(respondWithResult(res))\n      .catch(handleError(res));\n    */\n}\n\n// function helper\nvar findValueByVarHelper = function(array, key, value, target) {\n    var self = this;\n    if (!Array.isArray(array)) { return null; }\n\n    var index = array.map(x => x[key]).indexOf(value);\n\n    if (index !== -1) {\n        if (target === undefined) {\n            return array[index];\n        } else {\n            return array[index][target];\n        }\n    } else {\n        return null;\n    }\n}\nexport function fullSchm(schmId) {\n    console.log(\"El schema id es: \" + schmId);\n    var firstCall = function(s) {\n        var query = { type: \"schmAttrInputConf\", attributes: { \"$elemMatch\": { id: \"schema\", reference: schmId } } }\n        Schm.find({ type: \"schmAttrInputConf\", attributes: { \"$elemMatch\": { id: \"schema\", reference: \"57c42f2fc8307cd5b82f4484\" } } }).exec().then(function(f) {\n            console.log(\"Resultado de la query es: \")\n            console.log(f)\n        })\n        return q.all([\n            Schm.find(query).exec(),\n            Schm.findById(schmId),\n\n        ]).spread((schmAttrInputConf, schm) => {\n            console.log(\"El schm id es : \" + schm._id + \" y la cantidad de schmAttrInputConf es: \" + schmAttrInputConf.length);\n            let index = schm.attributes.map(x => x.id).indexOf(\"attributes\");\n            var AttrList = [];\n            if (index !== -1) { AttrList = schm.attributes[index].list }\n            return {\n                schema: schm,\n                schmAttrInputConf: schmAttrInputConf,\n                list: AttrList\n            }\n\n        })\n\n    }\n    var secondCall = function(d) {\n        var query = { \"$or\": [] };\n        for (var i = 0; i < d.list.length; i++) {\n            query[\"$or\"].push({ type: \"attrInputConf\", attributes: { \"$elemMatch\": { id: \"attribute\", reference: d.list[i] } } });\n        }\n        return Schm.find(query).then(function(s) {\n            d.attrInputConf = s;\n            return d\n        })\n    }\n    var thirdCall = function(d) {\n        var query = { \"$or\": [] };\n        for (var i = 0; i < d.list.length; i++) {\n            query[\"$or\"].push({ _id: d.list[i] });\n        }\n        return Schm.find(query).then(function(s) {\n            d.attributes = s;\n            return d\n        })\n    }\n    var forthCall = function(d) {\n        var inputRefs = d.attributes.map(x => findValueByVarHelper(x.attributes, \"id\", \"input\", \"reference\"));\n        //console.log(inputRefs)\n        var queryInputs = { \"$or\": [] };\n        for (var i = 0; i < inputRefs.length; i++) {\n            queryInputs[\"$or\"].push({ _id: inputRefs[i] });\n        }\n        //console.log(queryInputs);\n        return Schm.find(queryInputs).then(function(s) {\n            d.inputs = s;\n            return d\n        })\n    }\n\n    var concatCall = function(d) {\n        var concat = [d.schema];\n        concat = concat.concat(d.attributes);\n        concat = concat.concat(d.schmAttrInputConf);\n        concat = concat.concat(d.attrInputConf);\n        concat = concat.concat(d.inputs);\n        return concat;\n    }\n\n    return q.fcall(x => true)\n        .then(firstCall)\n        .then(secondCall)\n        .then(thirdCall)\n        .then(forthCall)\n        .then(concatCall)\n}\n\n\n// Gets a single Schm from the DB\nexport function show(req, res) {\n    if (req.query.record_only === \"true\") {\n        return Schm.findById(req.params.id).exec()\n            .then(handleEntityNotFound(res))\n            .then(respondWithResult(res))\n            .catch(handleError(res));\n    }\n\n    fullSchm(req.params.id)\n        .then(function(d) {\n            respondWithResult(res)(d);\n        })\n        .fail(handleError(res));\n\n}\n\n\n\n// Creates a new Schm in the DB\nexport function create(req, res) {\n    return Schm.create(req.body)\n        .then(respondWithResult(res, 201))\n        .catch(handleError(res));\n}\n\n// Updates an existing Schm in the DB\nexport function update(req, res) {\n    if (req.body._id) {\n        delete req.body._id;\n    }\n    return Schm.findById(req.params.id).exec()\n        .then(handleEntityNotFound(res))\n        .then(saveUpdates(req.body))\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Deletes a Schm from the DB\nexport function destroy(req, res) {\n    return Schm.findById(req.params.id).exec()\n        .then(handleEntityNotFound(res))\n        .then(removeEntity(res))\n        .catch(handleError(res));\n}\n\n/*\n\"_id\" : ObjectId(\"57a4e152c830e2bdff1a160a\"), \n    \"name\" : \"cruzamientos\", \n\n\n\n    \"_id\" : ObjectId(\"57a4e3cac830e2bdff1a160c\"), \n    \"name\" : \"parentales\", \n\n\n    \"_id\" : ObjectId(\"57a4e02ec830e2bdff1a1608\"), \n    \"name\" : \"individuos\", \n\n\n  \"_id\" : ObjectId(\"57a3a35bc830e2bdff1a1606\"), \n      \"name\" : \"fenotipado\", ?????\n*/"]}