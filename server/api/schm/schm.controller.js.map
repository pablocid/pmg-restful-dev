{"version":3,"sources":["api/schm/schm.controller.js"],"names":[],"mappings":"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","file":"api/schm/schm.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/schms              ->  index\n * POST    /api/schms              ->  create\n * GET     /api/schms/:id          ->  show\n * PUT     /api/schms/:id          ->  update\n * DELETE  /api/schms/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Schm from './schm.model';\nimport q from 'q';\nvar Stream = require('stream').Stream;\n\nvar EJSON = require('mongodb-extended-json');\n\nfunction respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function(entity) {\n        if (entity) {\n            res.status(statusCode).json(entity);\n        }\n    };\n}\n\n\nfunction ArrayFormatter() {\n    Stream.call(this);\n    this.writable = true;\n    this._done = false;\n}\n\nArrayFormatter.prototype = Stream.prototype;\n\nArrayFormatter.prototype.write = function(doc) {\n    if (!this._hasWritten) {\n        this._hasWritten = true;\n\n        // open an object literal / array string along with the doc\n        this.emit('data', '[' + JSON.stringify(doc));\n\n    } else {\n        this.emit('data', ',' + JSON.stringify(doc));\n    }\n\n    return true;\n}\n\nArrayFormatter.prototype.end =\n    ArrayFormatter.prototype.destroy = function() {\n        if (this._done) return;\n        this._done = true;\n\n        // close the object literal / array\n        this.emit('data', ']');\n        // done\n        this.emit('end');\n    }\n\nexport function stream(req, res) {\n    var query = {};\n\n    if (checkParam(req.query.type, 'string')) {\n        query.type = req.query.type;\n        //console.log('schm')\n    }\n\n    if (checkParam(req.query.name, 'string')) {\n        query.name = req.query.name;\n        //console.log('schm')\n    }\n\n    if (checkParam(req.query.filter, 'filter')) {\n        query[\"$and\"] = [];\n\n        var filter = JSON.parse(req.query.filter);\n        for (var i = 0; i < filter.length; i++) {\n            var p = { attributes: {} };\n            p[\"attributes\"][\"$elemMatch\"] = {};\n            p[\"attributes\"][\"$elemMatch\"]['id'] = filter[i].key;\n            p[\"attributes\"][\"$elemMatch\"][filter[i].datatype] = filter[i].value;\n            query[\"$and\"].push(p);\n        }\n    }\n\n    Schm.find(query).cursor().pipe(new ArrayFormatter()).pipe(res);\n\n}\nvar AggregateParser = require(\"../record/services/aggregation.oidParser\").AggParser;\n\nexport function aggregate(req, res) {\n    // var query;\n\n\n    // var aP = new AggregateParser(req.query.query);\n    // query = aP.parse();\n\n    return Schm.aggregate(EJSON.parse(req.query.query)).exec()\n        .then(respondWithResult(res, 200))\n        .catch(handleError(res));\n}\n\nfunction saveUpdates(updates) {\n    return function(entity) {\n        var updated = _.extend(entity, updates);\n        return updated.save()\n            .then(updated => {\n                return updated;\n            });\n    };\n}\n\nfunction removeEntity(res) {\n    return function(entity) {\n        if (entity) {\n            return entity.remove()\n                .then(() => {\n                    res.status(204).end();\n                });\n        }\n    };\n}\n\nfunction handleEntityNotFound(res) {\n    return function(entity) {\n        if (!entity) {\n            res.status(404).end();\n            return null;\n        }\n        return entity;\n    };\n}\n\nfunction handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function(err) {\n        res.status(statusCode).send(err);\n    };\n}\n\nfunction checkParam(param, dataType) {\n\n    if (param === null) { return false; }\n    var response = false;\n\n    if (dataType === 'string') {\n        if (typeof param === 'string' && param.length > 0) {\n            response = true;\n        }\n    }\n\n    if (dataType === 'number') {\n        //console.log('chequea numero')\n        if (typeof param === 'number') {\n            response = true;\n        }\n        if (typeof param === 'string') {\n\n            if (/^\\d*$/.test(param)) {\n                //console.log('es  numero')\n                response = true;\n            }\n        }\n    }\n\n    if (dataType === 'objectId') {\n        if (/^[0-9a-f]{24}$/i.test(param)) {\n            response = true;\n        }\n    }\n\n    //filtro de registros\n    if (dataType === 'filter') {\n        //checkeando si hay errores en el parseo a JSON\n        try {\n            var arr = JSON.parse(param);\n            //check if is an Array and if is empty\n            if (arr.length) {\n                // verificando si los obj dentro del array tiene las propiedades key, datatype y value\n                var isValid = true;\n                for (var index = 0; index < arr.length; index++) {\n                    if (arr[index].key === null || arr[index].value === null || arr[index].datatype === null) {\n                        isValid = false;\n                    }\n                }\n                response = isValid;\n            }\n\n        } catch (err) {\n            response = false;\n            console.log('invalid JSON')\n        }\n    }\n\n    return response;\n}\n\n// Gets a list of Schms\nexport function index(req, res) {\n    console.log(req.query.items);\n    var items = 30;\n    if (checkParam(req.query.items, 'number')) {\n        items = parseInt(req.query.items);\n    }\n\n    var page = req.query.page || 1;\n    // checking the query data types\n    if (!checkParam(page, 'number') || page === \"0\") {\n        return respondWithResult(res, 500)({ Error: 'El parámetro page no es válido' });\n    }\n    if (!checkParam(items, 'number')) {\n        //return respondWithResult(res, 500)({Error:'El parámetro items no es válido'});\n    }\n\n    var query = {};\n    //filtrar por schm\n    if (checkParam(req.query.type, 'string')) {\n        query.type = req.query.type;\n        //console.log('schm')\n    }\n\n    if (checkParam(req.query.filter, 'filter')) {\n        query[\"$and\"] = [];\n\n        var filter = JSON.parse(req.query.filter);\n        for (var i = 0; i < filter.length; i++) {\n            var p = { attributes: {} };\n            p[\"attributes\"][\"$elemMatch\"] = {};\n            p[\"attributes\"][\"$elemMatch\"]['id'] = filter[i].key;\n            p[\"attributes\"][\"$elemMatch\"][filter[i].datatype] = filter[i].value;\n            query[\"$and\"].push(p);\n        }\n        //console.log(filter);\n    }\n    console.log(JSON.stringify(query))\n\n    q.all([\n        Schm.find(query).count().exec(),\n        Schm.find(query).skip(items * (page - 1)).limit(items)\n    ]).spread((count, data) => {\n        respondWithResult(res)({\n            page: parseInt(page),\n            pages: Math.ceil(count / items),\n            length: data.length,\n            totalLength: count,\n            items: data\n        });\n    }).fail(handleError(res));\n    /*\n    return Schm.find().exec()\n      .then(respondWithResult(res))\n      .catch(handleError(res));\n    */\n}\n\n// function helper\nvar findValueByVarHelper = function(array, key, value, target) {\n    var self = this;\n    if (!Array.isArray(array)) { return null; }\n\n    var index = array.map(x => x[key]).indexOf(value);\n\n    if (index !== -1) {\n        if (target === undefined) {\n            return array[index];\n        } else {\n            return array[index][target];\n        }\n    } else {\n        return null;\n    }\n}\nexport function fullSchm(schmId) {\n    console.log(\"El schema id es: \" + schmId);\n    var firstCall = function(s) {\n        var query = { type: \"schmAttrInputConf\", attributes: { \"$elemMatch\": { id: \"schema\", reference: schmId } } }\n        Schm.find({ type: \"schmAttrInputConf\", attributes: { \"$elemMatch\": { id: \"schema\", reference: \"57c42f2fc8307cd5b82f4484\" } } }).exec().then(function(f) {\n            console.log(\"Resultado de la query es: \")\n            console.log(f)\n        })\n        return q.all([\n            Schm.find(query).exec(),\n            Schm.findById(schmId),\n\n        ]).spread((schmAttrInputConf, schm) => {\n            console.log(\"El schm id es : \" + schm._id + \" y la cantidad de schmAttrInputConf es: \" + schmAttrInputConf.length);\n            let index = schm.attributes.map(x => x.id).indexOf(\"attributes\");\n            var AttrList = [];\n            if (index !== -1) { AttrList = schm.attributes[index].list }\n            return {\n                schema: schm,\n                schmAttrInputConf: schmAttrInputConf,\n                list: AttrList\n            }\n\n        })\n\n    }\n    var secondCall = function(d) {\n        var query = { \"$or\": [] };\n        for (var i = 0; i < d.list.length; i++) {\n            query[\"$or\"].push({ type: \"attrInputConf\", attributes: { \"$elemMatch\": { id: \"attribute\", reference: d.list[i] } } });\n        }\n        return Schm.find(query).then(function(s) {\n            d.attrInputConf = s;\n            return d\n        })\n    }\n    var thirdCall = function(d) {\n        var query = { \"$or\": [] };\n        for (var i = 0; i < d.list.length; i++) {\n            query[\"$or\"].push({ _id: d.list[i] });\n        }\n        return Schm.find(query).then(function(s) {\n            d.attributes = s;\n            return d\n        })\n    }\n    var forthCall = function(d) {\n        var inputRefs = d.attributes.map(x => findValueByVarHelper(x.attributes, \"id\", \"input\", \"reference\"));\n        //console.log(inputRefs)\n        var queryInputs = { \"$or\": [] };\n        for (var i = 0; i < inputRefs.length; i++) {\n            queryInputs[\"$or\"].push({ _id: inputRefs[i] });\n        }\n        //console.log(queryInputs);\n        return Schm.find(queryInputs).then(function(s) {\n            d.inputs = s;\n            return d\n        })\n    }\n\n    var concatCall = function(d) {\n        var concat = [d.schema];\n        concat = concat.concat(d.attributes);\n        concat = concat.concat(d.schmAttrInputConf);\n        concat = concat.concat(d.attrInputConf);\n        concat = concat.concat(d.inputs);\n        return concat;\n    }\n\n    return q.fcall(x => true)\n        .then(firstCall)\n        .then(secondCall)\n        .then(thirdCall)\n        .then(forthCall)\n        .then(concatCall)\n}\n\n\n// Gets a single Schm from the DB\nexport function show(req, res) {\n    if (req.query.record_only === \"true\") {\n        return Schm.findById(req.params.id).exec()\n            .then(handleEntityNotFound(res))\n            .then(respondWithResult(res))\n            .catch(handleError(res));\n    }\n\n    fullSchm(req.params.id)\n        .then(function(d) {\n            respondWithResult(res)(d);\n        })\n        .fail(handleError(res));\n\n}\n\n\n\n// Creates a new Schm in the DB\nexport function create(req, res) {\n    return Schm.create(req.body)\n        .then(respondWithResult(res, 201))\n        .catch(handleError(res));\n}\n\n// Updates an existing Schm in the DB\nexport function update(req, res) {\n    if (req.body._id) {\n        delete req.body._id;\n    }\n    return Schm.findById(req.params.id).exec()\n        .then(handleEntityNotFound(res))\n        .then(saveUpdates(req.body))\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Deletes a Schm from the DB\nexport function destroy(req, res) {\n    return Schm.findById(req.params.id).exec()\n        .then(handleEntityNotFound(res))\n        .then(removeEntity(res))\n        .catch(handleError(res));\n}\n\n/*\n\"_id\" : ObjectId(\"57a4e152c830e2bdff1a160a\"), \n    \"name\" : \"cruzamientos\", \n\n\n\n    \"_id\" : ObjectId(\"57a4e3cac830e2bdff1a160c\"), \n    \"name\" : \"parentales\", \n\n\n    \"_id\" : ObjectId(\"57a4e02ec830e2bdff1a1608\"), \n    \"name\" : \"individuos\", \n\n\n  \"_id\" : ObjectId(\"57a3a35bc830e2bdff1a1606\"), \n      \"name\" : \"fenotipado\", ?????\n*/"],"sourceRoot":"/source/"}