{"version":3,"sources":["api/record/services/aggregation.oidParser.js"],"names":[],"mappings":";;;;;;;;;;QAEgB,S,GAAA,S;;AAFhB;;;;;;AAEO,SAAS,SAAT,CAAmB,KAAnB,EAAyB;AAC5B,KAAG;AACC,OAAK,KAAL,GAAa,KAAK,KAAL,CAAW,KAAX,CAAb;AACH,EAFD,CAEC,OAAM,CAAN,EAAQ;AACL,QAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACH;AAEJ;;AAED,UAAU,SAAV,CAAoB,KAApB,GAA4B,YAAW;AACtC,MAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,KAAL,CAAW,MAA/B,EAAuC,GAAvC,EAA4C;AAC3C,OAAI,IAAI,GAAR,IAAe,KAAK,KAAL,CAAW,CAAX,CAAf,EAA6B;AAC5B,QAAK,KAAL,CAAW,CAAX,EAAc,GAAd,IAAqB,KAAK,SAAL,CAAe,KAAK,KAAL,CAAW,CAAX,EAAc,GAAd,CAAf,CAArB;AACA;AACD;AACD,QAAO,KAAK,KAAZ;AACA,CAPD;;AASA,UAAU,SAAV,CAAoB,WAApB,GAAkC,UAAS,GAAT,EAAc;AAC/C,KAAG,CAAC,IAAI,cAAJ,CAAmB,MAAnB,CAAJ,EAA+B;AAAC,SAAO,GAAP;AAAY;AAC5C,QAAO,mBAAS,KAAT,CAAe,QAAf,CAAwB,IAAI,IAA5B,CAAP;AACA,CAHD;;AAKA,UAAU,SAAV,CAAoB,SAApB,GAAgC,UAAS,CAAT,EAAY;AAC3C,MAAI,IAAI,CAAR,IAAa,CAAb,EAAe;AACd,MAAG,sBAAO,EAAE,CAAF,CAAP,MAAgB,QAAhB,IAA4B,CAAC,MAAM,OAAN,CAAc,EAAE,CAAF,CAAd,CAAhC,EAAoD;AACnD,OAAG,EAAE,CAAF,EAAK,cAAL,CAAoB,MAApB,CAAH,EAA+B;AAC9B,MAAE,CAAF,IAAO,KAAK,WAAL,CAAiB,EAAE,CAAF,CAAjB,CAAP;AACA,WAAO,CAAP;AACA;AACD,QAAI,IAAI,CAAR,IAAa,EAAE,CAAF,CAAb,EAAkB;AACjB,MAAE,CAAF,EAAK,CAAL,IAAU,KAAK,SAAL,CAAe,EAAE,CAAF,EAAK,CAAL,CAAf,CAAV;AACA;AACD;AACD,MAAG,MAAM,OAAN,CAAc,EAAE,CAAF,CAAd,CAAH,EAAuB;AACtB,QAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,EAAE,CAAF,EAAK,MAAzB,EAAiC,GAAjC,EAAsC;AACrC,MAAE,CAAF,EAAK,CAAL,IAAU,KAAK,SAAL,CAAe,EAAE,CAAF,EAAK,CAAL,CAAf,CAAV;AACA;AACD;AACD;AACD,QAAO,CAAP;AACA,CAlBD","file":"api/record/services/aggregation.oidParser.js","sourcesContent":["import mongoose from 'mongoose';\n\nexport function AggParser(query){\n    try{\n        this.query = JSON.parse(query);\n    }catch(e){\n        throw new Error(\"Error en el Parseo de la query\");\n    }\n\t\n}\n\nAggParser.prototype.parse = function() {\n\tfor (var i = 0; i < this.query.length; i++) {\n\t\tfor(var key in this.query[i]){\n\t\t\tthis.query[i][key] = this.ssqParser(this.query[i][key]);\n\t\t}\n\t};\n\treturn this.query;\n};\n\nAggParser.prototype.applyChange = function(oid) {\n\tif(!oid.hasOwnProperty(\"$oid\")){return oid;}\n\treturn mongoose.Types.ObjectId(oid.$oid);\n};\n\nAggParser.prototype.ssqParser = function(q) {\n\tfor(var i in q){\n\t\tif(typeof q[i] === \"object\" && !Array.isArray(q[i])){\n\t\t\tif(q[i].hasOwnProperty(\"$oid\")){\n\t\t\t\tq[i] = this.applyChange(q[i]);\n\t\t\t\treturn q;\n\t\t\t}\n\t\t\tfor(var w in q[i]){\n\t\t\t\tq[i][w] = this.ssqParser(q[i][w]);\n\t\t\t}\n\t\t}\n\t\tif(Array.isArray(q[i])){\n\t\t\tfor (var e = 0; e < q[i].length; e++) {\n\t\t\t\tq[i][e] = this.ssqParser(q[i][e]);\n\t\t\t};\n\t\t}\n\t}\n\treturn q;\n};"],"sourceRoot":"/source/"}