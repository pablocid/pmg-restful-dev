{"version":3,"sources":["api/record/services/aggregation.oidParser.js"],"names":[],"mappings":";;;;;;;;;;;;;;QAEgB,S,GAAA,S;;AAFhB;;;;;;AAEO,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AAC7B,QAAI;AACA,aAAK,KAAL,GAAa,KAAK,KAAL,CAAW,KAAX,CAAb;AACH,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,gBAAQ,GAAR,CAAY,oBAAZ;AACA,cAAM,IAAI,KAAJ,CAAU,+CAAV,CAAN;AACH;AAEJ;;AAED,UAAU,SAAV,CAAoB,KAApB,GAA4B,YAAW;AACnC,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,KAAL,CAAW,MAA/B,EAAuC,GAAvC,EAA4C;AACxC,aAAK,IAAI,GAAT,IAAgB,KAAK,KAAL,CAAW,CAAX,CAAhB,EAA+B;AAC3B,iBAAK,KAAL,CAAW,CAAX,EAAc,GAAd,IAAqB,KAAK,SAAL,CAAe,KAAK,KAAL,CAAW,CAAX,EAAc,GAAd,CAAf,CAArB;AACH;AACJ;AACD,YAAQ,GAAR,CAAY,yBAAe,KAAK,KAApB,CAAZ;AACA,WAAO,KAAK,KAAZ;AACH,CARD;;AAUA,UAAU,SAAV,CAAoB,WAApB,GAAkC,UAAS,GAAT,EAAc;AAC5C,QAAI,CAAC,IAAI,cAAJ,CAAmB,MAAnB,CAAL,EAAiC;AAAE,eAAO,GAAP;AAAa;AAChD,WAAO,mBAAS,KAAT,CAAe,QAAf,CAAwB,IAAI,IAA5B,CAAP;AACH,CAHD;;AAKA,UAAU,SAAV,CAAoB,SAApB,GAAgC,UAAS,CAAT,EAAY;AACxC,SAAK,IAAI,CAAT,IAAc,CAAd,EAAiB;AACb,YAAI,sBAAO,EAAE,CAAF,CAAP,MAAgB,QAAhB,IAA4B,CAAC,MAAM,OAAN,CAAc,EAAE,CAAF,CAAd,CAAjC,EAAsD;AAClD,gBAAI,EAAE,CAAF,MAAS,IAAT,IAAiB,EAAE,CAAF,EAAK,cAAL,CAAoB,MAApB,CAArB,EAAkD;AAC9C,kBAAE,CAAF,IAAO,KAAK,WAAL,CAAiB,EAAE,CAAF,CAAjB,CAAP;AACH;AACD,iBAAK,IAAI,CAAT,IAAc,EAAE,CAAF,CAAd,EAAoB;AAChB,kBAAE,CAAF,EAAK,CAAL,IAAU,KAAK,SAAL,CAAe,EAAE,CAAF,EAAK,CAAL,CAAf,CAAV;AACH;AACJ;AACD,YAAI,MAAM,OAAN,CAAc,EAAE,CAAF,CAAd,CAAJ,EAAyB;AACrB,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,EAAE,CAAF,EAAK,MAAzB,EAAiC,GAAjC,EAAsC;AAClC,kBAAE,CAAF,EAAK,CAAL,IAAU,KAAK,SAAL,CAAe,EAAE,CAAF,EAAK,CAAL,CAAf,CAAV;AACH;AACJ;AACJ;AACD,WAAO,CAAP;AACH,CAjBD","file":"api/record/services/aggregation.oidParser.js","sourcesContent":["import mongoose from 'mongoose';\n\nexport function AggParser(query) {\n    try {\n        this.query = JSON.parse(query);\n    } catch (e) {\n        console.log(\"Error en el parseo\");\n        throw new Error(\"Error en el primer paso de Parseo de la query\");\n    }\n\n}\n\nAggParser.prototype.parse = function() {\n    for (var i = 0; i < this.query.length; i++) {\n        for (var key in this.query[i]) {\n            this.query[i][key] = this.ssqParser(this.query[i][key]);\n        }\n    };\n    console.log(JSON.stringify(this.query));\n    return this.query;\n};\n\nAggParser.prototype.applyChange = function(oid) {\n    if (!oid.hasOwnProperty(\"$oid\")) { return oid; }\n    return mongoose.Types.ObjectId(oid.$oid);\n};\n\nAggParser.prototype.ssqParser = function(q) {\n    for (var i in q) {\n        if (typeof q[i] === \"object\" && !Array.isArray(q[i])) {\n            if (q[i] !== null && q[i].hasOwnProperty(\"$oid\")) {\n                q[i] = this.applyChange(q[i]);\n            }\n            for (var w in q[i]) {\n                q[i][w] = this.ssqParser(q[i][w]);\n            }\n        }\n        if (Array.isArray(q[i])) {\n            for (var e = 0; e < q[i].length; e++) {\n                q[i][e] = this.ssqParser(q[i][e]);\n            }\n        }\n    }\n    return q;\n};"],"sourceRoot":"/source/"}