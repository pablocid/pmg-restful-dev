{"version":3,"sources":["api/record/record.controller.js"],"names":[],"mappings":"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","file":"api/record/record.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/records              ->  index\n * POST    /api/records              ->  create\n * GET     /api/records/:id          ->  show\n * PUT     /api/records/:id          ->  update\n * DELETE  /api/records/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Record from './record.model';\nvar Schm = require('../schm/schm.controller');\nimport mongoose from 'mongoose';\nimport q from 'q';\nvar Stream = require('stream').Stream;\n\nvar EJSON = require('mongodb-extended-json');\n\nfunction respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function(entity) {\n        if (entity) {\n            res.status(statusCode).json(entity);\n        }\n    };\n}\n\nfunction ArrayFormatter() {\n    Stream.call(this);\n    this.writable = true;\n    this._done = false;\n}\n\nArrayFormatter.prototype = Stream.prototype;\n\nArrayFormatter.prototype.write = function(doc) {\n    if (!this._hasWritten) {\n        this._hasWritten = true;\n\n        // open an object literal / array string along with the doc\n        this.emit('data', '[' + JSON.stringify(doc));\n\n    } else {\n        this.emit('data', ',' + JSON.stringify(doc));\n    }\n\n    return true;\n}\n\nArrayFormatter.prototype.end =\n    ArrayFormatter.prototype.destroy = function() {\n        if (this._done) return;\n        this._done = true;\n\n        // close the object literal / array\n        this.emit('data', ']');\n        // done\n        this.emit('end');\n    }\n\nexport function stream(req, res) {\n    var query = {};\n    //filtrar por schm\n    if (checkParam(req.query.schm, 'objectId')) {\n        query.schm = req.query.schm;\n        //console.log('schm')\n    }\n\n    if (checkParam(req.query.filter, 'filter')) {\n        query[\"$and\"] = [];\n\n        var filter = JSON.parse(req.query.filter);\n        for (var i = 0; i < filter.length; i++) {\n            var p = { attributes: {} };\n            p[\"attributes\"][\"$elemMatch\"] = {};\n            p[\"attributes\"][\"$elemMatch\"]['id'] = filter[i].key;\n            p[\"attributes\"][\"$elemMatch\"][filter[i].datatype] = filter[i].value;\n            query[\"$and\"].push(p);\n        }\n    }\n\n    Record.find(query).cursor().pipe(new ArrayFormatter()).pipe(res);\n\n}\n\nfunction saveUpdates(updates) {\n    return function(entity) {\n        var updated = _.extend(entity, updates);\n        return updated.save()\n            .then(updated => {\n                return updated;\n            });\n    };\n}\n\nfunction removeEntity(res) {\n    return function(entity) {\n        if (entity) {\n            return entity.remove()\n                .then(() => {\n                    res.status(204).end();\n                });\n        }\n    };\n}\n\nfunction handleEntityNotFound(res) {\n    return function(entity) {\n        if (!entity) {\n            res.status(404).end();\n            return null;\n        }\n        return entity;\n    };\n}\n\nfunction handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function(err) {\n        res.status(statusCode).send(err);\n    };\n}\n\nfunction checkParam(param, dataType) {\n\n    if (param === null) { return false; }\n    var response = false;\n\n    if (dataType === 'string') {\n        if (typeof param === 'string' && param.length > 0) {\n            response = true;\n        }\n    }\n\n    if (dataType === 'number') {\n        //console.log('chequea numero')\n        if (typeof param === 'number') {\n            response = true;\n        }\n        if (typeof param === 'string') {\n\n            if (/^\\d*$/.test(param)) {\n                //console.log('es  numero')\n                response = true;\n            }\n        }\n    }\n\n    if (dataType === 'objectId') {\n        if (/^[0-9a-f]{24}$/i.test(param)) {\n            response = true;\n        }\n    }\n\n    //filtro de registros\n    if (dataType === 'filter') {\n        //checkeando si hay errores en el parseo a JSON\n        try {\n            var arr = JSON.parse(param);\n            //check if is an Array and if is empty\n            if (arr.length) {\n                // verificando si los obj dentro del array tiene las propiedades key, datatype y value\n                var isValid = true;\n                for (var index = 0; index < arr.length; index++) {\n                    if (arr[index].key === null || arr[index].value === null || arr[index].datatype === null) {\n                        isValid = false;\n                    }\n                }\n                response = isValid;\n            }\n\n        } catch (err) {\n            response = false;\n            console.log('invalid JSON')\n        }\n    }\n\n    return response;\n}\n\n// Gets a list of Records\nexport function index(req, res) {\n\n    var items = 30;\n    if (checkParam(req.query.items, 'number')) {\n        items = parseInt(req.query.items);\n    }\n    var page = req.query.page || 1;\n    // checking the query data types\n    if (!checkParam(page, 'number') || page === \"0\") {\n        return respondWithResult(res, 500)({ Error: 'El parámetro page no es válido' });\n    }\n    if (!checkParam(items, 'number')) {\n        return respondWithResult(res, 500)({ Error: 'El parámetro items no es válido' });\n    }\n\n    var query = {};\n    //filtrar por schm\n    if (checkParam(req.query.schm, 'objectId')) {\n        query.schm = req.query.schm;\n        //console.log('schm')\n    }\n    // populate by attr objectId\n    if (checkParam(req.query.populate, 'objectId')) {\n        //query.populate = req.query.populate;\n        //console.log('schm')\n    }\n    if (checkParam(req.query.filter, 'filter')) {\n        query[\"$and\"] = [];\n\n        var filter = JSON.parse(req.query.filter);\n        for (var i = 0; i < filter.length; i++) {\n            var p = { attributes: {} };\n            p[\"attributes\"][\"$elemMatch\"] = {};\n            p[\"attributes\"][\"$elemMatch\"]['id'] = filter[i].key;\n            p[\"attributes\"][\"$elemMatch\"][filter[i].datatype] = filter[i].value;\n            query[\"$and\"].push(p);\n        }\n        //console.log(filter);\n    }\n    var qAllArr = [\n        Record.find(query).count().exec(),\n        Record.find(query).sort({ created: -1 }).skip(items * (page - 1)).limit(items),\n    ]\n    if (query.schm) {\n        qAllArr.push(Schm.fullSchm(query.schm))\n    }\n    q.all(qAllArr).spread((count, data, schema) => {\n            return {\n                page: parseInt(page),\n                pages: Math.ceil(count / items),\n                length: data.length,\n                totalLength: count,\n                schema: schema,\n                items: data\n            }\n        })\n        .then(x => {\n            if (checkParam(req.query.populate, 'objectId')) {\n                return PopulateByAttr(x, req.query.populate);\n            }\n            return x;\n        })\n        .then(x => {\n            if (x.schemaPopulated) {\n                return Schm.fullSchm(x.schemaPopulated).then(s => {\n                    x.schemaPopulated = s;\n                    return x;\n                })\n            } else {\n                return x;\n            }\n        })\n        .then(x => respondWithResult(res)(x))\n        .fail(handleError(res));\n\n    function PopulateByAttr(res, attrId) {\n        res.itemsPopulated = res.items.map(x => {\n            return x.attributes.filter(x => x.id === attrId).map(x => x.reference)\n        }).map(x => {\n            if (x.length) {\n                return x[0]\n            } else {\n                return null;\n            }\n        }).filter(x => x);\n        var popQuery = { \"$or\": [] };\n        for (var q = 0; q < res.itemsPopulated.length; q++) {\n            popQuery.$or.push({ _id: res.itemsPopulated[q] })\n        }\n\n        return Record.find(popQuery).exec().then(x => {\n                if (x.length) {\n                    res.schemaPopulated = x[0].schm;\n                }\n                res.itemsPopulated = x;\n                return res;\n            })\n            //filtrar la referencia del \n    }\n}\nexport function aggregate(req, res) {\n    // var query;\n    // var AggregateParser = require(\"./services/aggregation.oidParser\").AggParser;\n\n    // var aP = new AggregateParser(req.query.query);\n    // query = aP.parse();\n\n\n\n\n    return Record.aggregate(EJSON.deflate(req.query.query)).exec()\n        .then(respondWithResult(res, 200))\n        .catch(handleError(res));\n\n}\n// Gets a single Record from the DB\nexport function show(req, res) {\n    //si schm, key y datatype estan presentes, el id será tomado como el valor del atributo y no como _id\n    var query;\n    if (\n        checkParam(req.query.schm, 'objectId') &&\n        checkParam(req.query.key, 'objectId') &&\n        checkParam(req.query.datatype, 'string')\n    ) {\n        query = { schm: req.query.schm, attributes: {} }\n        query.attributes[\"$elemMatch\"] = {};\n        query.attributes[\"$elemMatch\"][\"id\"] = req.query.key;\n        query.attributes[\"$elemMatch\"][req.query.datatype] = req.params.id;\n    } else {\n        query = req.params.id;\n    }\n\n    return q.fcall(x => query)\n        .then(function(res) {\n            if (typeof res === 'string') {\n                return Record.findById(res);\n            } else {\n                return Record.find(query);\n            }\n        })\n        .then(function(res) {\n            if (Array.isArray(res)) {\n                return Schm.fullSchm(req.query.schm)\n                    .then(function(schm) {\n                        return {\n                            length: res.length,\n                            schema: schm,\n                            record: res[0]\n                        }\n                    })\n            } else {\n                return Schm.fullSchm(res.schm)\n                    .then(function(schm) {\n                        return {\n                            schema: schm,\n                            record: res\n                        }\n                    })\n            }\n        })\n        .then(respondWithResult(res))\n        .catch(handleError(res))\n        .done(function(a) { console.log(\"DONE \" + a) });\n}\n\n// Creates a new Record in the DB\nexport function create(req, res) {\n    return Record.create(req.body)\n        .then(respondWithResult(res, 201))\n        .catch(handleError(res));\n}\n\n// Updates an existing Record in the DB\nexport function update(req, res) {\n    if (req.body._id) {\n        delete req.body._id;\n    }\n    return Record.findById(req.params.id).exec()\n        .then(handleEntityNotFound(res))\n        .then(saveUpdates(req.body))\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Deletes a Record from the DB\nexport function destroy(req, res) {\n    return Record.findById(req.params.id).exec()\n        .then(handleEntityNotFound(res))\n        .then(removeEntity(res))\n        .catch(handleError(res));\n}"],"sourceRoot":"/source/"}